DROP DATABASE FERRETERIA;
CREATE DATABASE FERRETERIA;
USE FERRETERIA;

CREATE TABLE CIUDAD(
    ID_CIUDAD INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(75) NOT NULL
);

CREATE TABLE BARRIO(
    ID_BARRIO INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(75) NOT NULL
);

CREATE TABLE LOCALIDAD(
    ID_LOCALIDAD INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(75) NOT NULL
);

CREATE TABLE DIRECCION(
    ID_DIRECCION INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_CIUDAD INT NOT NULL,
    ID_BARRIO INT NOT NULL,
    ID_LOCALIDAD INT NOT NULL,
    NUMERO VARCHAR(10),
    CALLE VARCHAR(5),
    FOREIGN KEY (ID_CIUDAD) REFERENCES CIUDAD(ID_CIUDAD),
    FOREIGN KEY (ID_BARRIO) REFERENCES BARRIO(ID_BARRIO),
    FOREIGN KEY (ID_LOCALIDAD) REFERENCES LOCALIDAD(ID_LOCALIDAD)
);

CREATE TABLE PROVEEDOR(
    RUT_PROVEEDOR VARCHAR(11) NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50),
    PAGINA_WEB VARCHAR(256),
    ID_DIRECCION INT NOT NULL,
    FOREIGN KEY (ID_DIRECCION) REFERENCES DIRECCION(ID_DIRECCION)
);

CREATE TABLE CLIENTE(
    RUT_CLIENTE VARCHAR(11) NOT NULL PRIMARY KEY,
    NOMBRE1 VARCHAR(30) NOT NULL,
    NOMBRE2 VARCHAR(30),
    APELLIDO1 VARCHAR(30) NOT NULL,
    APELLIDO2 VARCHAR(30) NOT NULL,
    ID_DIRECCION INT NOT NULL,
    FOREIGN KEY (ID_DIRECCION) REFERENCES DIRECCION(ID_DIRECCION)
);

CREATE TABLE FERRETERIA(
    ID_FERRETERIA VARCHAR(11) NOT NULL PRIMARY KEY,
    NOMBRE_FERRETERIA VARCHAR(25) NOT NULL,     
    ID_DIRECCION INT NOT NULL,
    FOREIGN KEY (ID_DIRECCION) REFERENCES DIRECCION(ID_DIRECCION)
);

CREATE TABLE EMPLEADO(
    RUT_EMPLEADO VARCHAR(11) NOT NULL PRIMARY KEY,
    SUELDO INT NOT NULL,
    NOMBRE1 VARCHAR(30) NOT NULL,
    NOMBRE2 VARCHAR(30),
    APELLIDO1 VARCHAR(30) NOT NULL,
    APELLIDO2 VARCHAR(30) NOT NULL,
    ID_DIRECCION INT NOT NULL,
    ID_FERRETERIA VARCHAR(11) NOT NULL,
    FOREIGN KEY (ID_DIRECCION) REFERENCES DIRECCION(ID_DIRECCION),
    FOREIGN KEY (ID_FERRETERIA) REFERENCES FERRETERIA(ID_FERRETERIA)
);

CREATE TABLE TELEFONO_PROVEEDOR(
    RUT_PROVEEDOR VARCHAR(11) NOT NULL,
    NUMERO VARCHAR(10),
    FOREIGN KEY (RUT_PROVEEDOR) REFERENCES PROVEEDOR(RUT_PROVEEDOR),
    PRIMARY KEY (RUT_PROVEEDOR,NUMERO)
);

CREATE TABLE TELEFONO_CLIENTE(
    RUT_CLIENTE VARCHAR(11) NOT NULL,
    NUMERO VARCHAR(10),
    FOREIGN KEY (RUT_CLIENTE) REFERENCES CLIENTE(RUT_CLIENTE),
    PRIMARY KEY (RUT_CLIENTE,NUMERO)
);

CREATE TABLE TELEFONO_EMPLEADO(
    RUT_EMPLEADO VARCHAR(11) NOT NULL,
    NUMERO VARCHAR(10),
    FOREIGN KEY (RUT_EMPLEADO) REFERENCES EMPLEADO(RUT_EMPLEADO),
    PRIMARY KEY (RUT_EMPLEADO,NUMERO)
);

CREATE TABLE CATEGORIA(
    ID_CATEGORIA INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    DENOMINACION VARCHAR(50) NOT NULL
);

CREATE TABLE PRODUCTO(
    ID_PRODUCTO VARCHAR(12) NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50) NOT NULL,
    PRECIO_COMPRA INT NOT NULL,
    PRECIO_VENTA INT NOT NULL,
    IVA INT NOT NULL,
    RUT_PROVEEDOR VARCHAR(11),
    ID_CATEGORIA INT NOT NULL,
    FOREIGN KEY (RUT_PROVEEDOR) REFERENCES PROVEEDOR(RUT_PROVEEDOR),
    FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA)
);

CREATE TABLE ESTADO(
    ID_ESTADO INT NOT NULL PRIMARY KEY,
    DENOMINACION VARCHAR(10)
);

CREATE TABLE SOLICITUD(
    ID_SOLICITUD INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    FECHA_PEDIDO DATETIME NOT NULL,
    FECHA_ESPERADA DATETIME NOT NULL,
    FECHA_ENTREGA DATETIME,
    CALIFICACION INT,
    ID_FERRETERIA VARCHAR(11) NOT NULL,
    ID_ESTADO INT NOT NULL,
    RUT_PROVEEDOR VARCHAR(11),
    FOREIGN KEY (RUT_PROVEEDOR) REFERENCES PROVEEDOR(RUT_PROVEEDOR),
    FOREIGN KEY (ID_FERRETERIA) REFERENCES FERRETERIA(ID_FERRETERIA),
    FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO(ID_ESTADO)
);

CREATE TABLE PRODUCTOS_SOLICITUD(
    ID_PRODUCTO VARCHAR(12) NOT NULL,
    ID_SOLICITUD INT NOT NULL,
    CANTIDAD INT,
    MONTO_TOTAL INT, #CALCULAR
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    FOREIGN KEY (ID_SOLICITUD) REFERENCES SOLICITUD(ID_SOLICITUD),
    PRIMARY KEY (ID_PRODUCTO,ID_SOLICITUD)
);

CREATE TABLE INVENTARIO_FERRETERIA(
    ID_PRODUCTO VARCHAR(12) NOT NULL,
    ID_FERRETERIA VARCHAR(11) NOT NULL,
    CANTIDAD INT,
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    FOREIGN KEY (ID_FERRETERIA) REFERENCES FERRETERIA(ID_FERRETERIA),
    PRIMARY KEY (ID_PRODUCTO,ID_FERRETERIA)
);

CREATE TABLE FORMA_PAGO(
    ID_FORMA_PAGO INT NOT NULL PRIMARY KEY,
    DENOMINACION VARCHAR(50)
);

CREATE TABLE DETALLES_FACTURA(
    ID_FACTURA INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    DESCUENTO INT,
    FECHA DATE NOT NULL,
    ID_FERRETERIA VARCHAR(11) NOT NULL,
    RUT_CLIENTE VARCHAR(11) NOT NULL,
    RUT_EMPLEADO VARCHAR(11) NOT NULL,
    ID_FORMA_PAGO INT NOT NULL,
    FOREIGN KEY (ID_FERRETERIA) REFERENCES FERRETERIA(ID_FERRETERIA),
    FOREIGN KEY (RUT_CLIENTE) REFERENCES CLIENTE(RUT_CLIENTE),
    FOREIGN KEY (RUT_EMPLEADO) REFERENCES EMPLEADO(RUT_EMPLEADO),
    FOREIGN KEY (ID_FORMA_PAGO) REFERENCES FORMA_PAGO(ID_FORMA_PAGO)
);

CREATE TABLE ITEMS_FACTURA(
    ID_PRODUCTO VARCHAR(12) NOT NULL,
    ID_FACTURA INT NOT NULL,
    CANTIDAD INT NOT NULL,
    IVA INT,
    PRECIO_VENTA INT,
    MONTO_TOTAL INT,
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    FOREIGN KEY (ID_FACTURA) REFERENCES DETALLES_FACTURA(ID_FACTURA),
    PRIMARY KEY (ID_PRODUCTO,ID_FACTURA)
);

DELIMITER //

CREATE TRIGGER productos_solicitud_proveedor
AFTER INSERT ON PRODUCTOS_SOLICITUD
FOR EACH ROW
BEGIN
    DECLARE proveedor_rut VARCHAR(11);
    DECLARE producto_count INT;
    
    SELECT RUT_PROVEEDOR INTO proveedor_rut
    FROM SOLICITUD
    WHERE ID_SOLICITUD = NEW.ID_SOLICITUD;
    
    SELECT COUNT(*) INTO producto_count
    FROM PRODUCTO
    WHERE ID_PRODUCTO = NEW.ID_PRODUCTO AND RUT_PROVEEDOR = proveedor_rut;
    
    IF producto_count = 0 THEN
        DELETE FROM PRODUCTOS_SOLICITUD
        WHERE ID_PRODUCTO = NEW.ID_PRODUCTO AND ID_SOLICITUD = NEW.ID_SOLICITUD;
        
        SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'El producto no pertenece al proveedor asociado a la solicitud.';
    END IF;
END //

CREATE TRIGGER actualizar_inventario_i
AFTER INSERT ON PRODUCTOS_SOLICITUD
FOR EACH ROW
BEGIN
    DECLARE estado_solicitud INT;
    DECLARE ferreteria_solicitud VARCHAR(11);
    DECLARE cantidad_producto INT;

    SELECT ID_ESTADO INTO estado_solicitud FROM SOLICITUD WHERE SOLICITUD.ID_SOLICITUD = NEW.ID_SOLICITUD;
    IF estado_solicitud = 2 THEN

        SELECT ID_FERRETERIA INTO ferreteria_solicitud FROM SOLICITUD WHERE SOLICITUD.ID_SOLICITUD = NEW.ID_SOLICITUD;

        SELECT CANTIDAD INTO cantidad_producto FROM INVENTARIO_FERRETERIA WHERE ID_FERRETERIA = ferreteria_solicitud AND ID_PRODUCTO=NEW.ID_PRODUCTO;
        
        IF cantidad_producto IS NULL THEN
            INSERT INTO INVENTARIO_FERRETERIA (ID_PRODUCTO,ID_FERRETERIA,CANTIDAD) VALUES (NEW.ID_PRODUCTO, ferreteria_solicitud, NEW.CANTIDAD);
        ELSE
            UPDATE INVENTARIO_FERRETERIA SET CANTIDAD = NEW.CANTIDAD+cantidad_producto WHERE ID_PRODUCTO=NEW.ID_PRODUCTO;
        END IF;

    END IF;
END //

CREATE TRIGGER actualizar_inventario_u
AFTER UPDATE ON SOLICITUD
FOR EACH ROW
BEGIN
    IF NEW.ID_ESTADO = 2 THEN
        UPDATE INVENTARIO_FERRETERIA AS i
        JOIN PRODUCTOS_SOLICITUD AS ps ON i.ID_PRODUCTO = ps.ID_PRODUCTO
        SET i.CANTIDAD = i.CANTIDAD + ps.CANTIDAD
        WHERE i.ID_FERRETERIA = NEW.ID_FERRETERIA
        AND ps.ID_SOLICITUD = NEW.ID_SOLICITUD;
        
        INSERT INTO INVENTARIO_FERRETERIA (ID_PRODUCTO, ID_FERRETERIA, CANTIDAD)
        SELECT ps.ID_PRODUCTO, NEW.ID_FERRETERIA, ps.CANTIDAD
        FROM PRODUCTOS_SOLICITUD AS ps
        LEFT JOIN INVENTARIO_FERRETERIA AS i ON ps.ID_PRODUCTO = i.ID_PRODUCTO
        WHERE ps.ID_SOLICITUD = NEW.ID_SOLICITUD
        AND NEW.ID_ESTADO = 2
        AND i.ID_PRODUCTO IS NULL;
    END IF;
END //

CREATE TRIGGER actualiza_inventario_factura
BEFORE INSERT ON ITEMS_FACTURA
FOR EACH ROW
BEGIN
    DECLARE ferreteria_compra VARCHAR(11);

    SELECT ID_FERRETERIA INTO ferreteria_compra FROM DETALLES_FACTURA 
    WHERE DETALLES_FACTURA.ID_FACTURA = NEW.ID_FACTURA;

    UPDATE INVENTARIO_FERRETERIA
    SET CANTIDAD = CANTIDAD - NEW.CANTIDAD
    WHERE ID_PRODUCTO = NEW.ID_PRODUCTO
    AND ID_FERRETERIA = ferreteria_compra AND CANTIDAD>=NEW.CANTIDAD;

END//

DELIMITER ;

