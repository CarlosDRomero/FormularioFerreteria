CREATE TABLE CIUDAD(
    ID_CIUDAD NUMBER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(75) NOT NULL
);

CREATE SEQUENCE sqCiudad START WITH 1 INCREMENT BY 1;

CREATE TABLE BARRIO(
    ID_BARRIO NUMBER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(75) NOT NULL
);

CREATE SEQUENCE sqBarrio START WITH 1 INCREMENT BY 1;

CREATE TABLE LOCALIDAD(
    ID_LOCALIDAD NUMBER NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(75) NOT NULL
);

CREATE SEQUENCE sqLocalidad START WITH 1 INCREMENT BY 1;

CREATE TABLE DIRECCION(
    ID_DIRECCION NUMBER NOT NULL PRIMARY KEY,
    ID_CIUDAD NUMBER NOT NULL,
    ID_BARRIO NUMBER NOT NULL,
    ID_LOCALIDAD NUMBER NOT NULL,
    NUMERO VARCHAR(10),
    CALLE VARCHAR(5),
    FOREIGN KEY (ID_CIUDAD) REFERENCES CIUDAD(ID_CIUDAD),
    FOREIGN KEY (ID_BARRIO) REFERENCES BARRIO(ID_BARRIO),
    FOREIGN KEY (ID_LOCALIDAD) REFERENCES LOCALIDAD(ID_LOCALIDAD)
);

CREATE SEQUENCE sqDireccion START WITH 1 INCREMENT BY 1;

CREATE TABLE PROVEEDOR(
    RUT_PROVEEDOR VARCHAR(11) NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50),
    PAGINA_WEB VARCHAR(256),
    ID_DIRECCION NUMBER NOT NULL,
    FOREIGN KEY (ID_DIRECCION) REFERENCES DIRECCION(ID_DIRECCION)
);

CREATE TABLE CLIENTE(
    RUT_CLIENTE VARCHAR(11) NOT NULL PRIMARY KEY,
    NOMBRE1 VARCHAR(30) NOT NULL,
    NOMBRE2 VARCHAR(30),
    APELLIDO1 VARCHAR(30) NOT NULL,
    APELLIDO2 VARCHAR(30) NOT NULL,
    ID_DIRECCION NUMBER NOT NULL,
    FOREIGN KEY (ID_DIRECCION) REFERENCES DIRECCION(ID_DIRECCION)
);

CREATE TABLE FERRETERIA(
    ID_FERRETERIA NUMBER NOT NULL PRIMARY KEY,
    ID_DIRECCION NUMBER NOT NULL,
    FOREIGN KEY (ID_DIRECCION) REFERENCES DIRECCION(ID_DIRECCION)
);

CREATE SEQUENCE sqFerreteria START WITH 1 INCREMENT BY 1;

CREATE TABLE EMPLEADO(
    RUT_EMPLEADO VARCHAR(11) NOT NULL PRIMARY KEY,
    SUELDO NUMBER NOT NULL,
    NOMBRE1 VARCHAR(30) NOT NULL,
    NOMBRE2 VARCHAR(30),
    APELLIDO1 VARCHAR(30) NOT NULL,
    APELLIDO2 VARCHAR(30) NOT NULL,
    ID_DIRECCION NUMBER NOT NULL,
    ID_FERRETERIA NUMBER NOT NULL,
    FOREIGN KEY (ID_DIRECCION) REFERENCES DIRECCION(ID_DIRECCION),
    FOREIGN KEY (ID_FERRETERIA) REFERENCES FERRETERIA(ID_FERRETERIA)
);

CREATE TABLE TELEFONO_PROVEEDOR(
    RUT_PROVEEDOR VARCHAR(11) NOT NULL,
    NUMERO VARCHAR(10),
    FOREIGN KEY (RUT_PROVEEDOR) REFERENCES PROVEEDOR(RUT_PROVEEDOR),
    PRIMARY KEY (RUT_PROVEEDOR,NUMERO)
);

CREATE TABLE TELEFONO_CLIENTE(
    RUT_CLIENTE VARCHAR(11) NOT NULL,
    NUMERO VARCHAR(10),
    FOREIGN KEY (RUT_CLIENTE) REFERENCES CLIENTE(RUT_CLIENTE),
    PRIMARY KEY (RUT_CLIENTE,NUMERO)
);

CREATE TABLE TELEFONO_EMPLEADO(
    RUT_EMPLEADO VARCHAR(11) NOT NULL,
    NUMERO VARCHAR(10),
    FOREIGN KEY (RUT_EMPLEADO) REFERENCES EMPLEADO(RUT_EMPLEADO),
    PRIMARY KEY (RUT_EMPLEADO,NUMERO)
);

CREATE TABLE CATEGORIA(
    ID_CATEGORIA NUMBER NOT NULL PRIMARY KEY,
    DENOMINACION VARCHAR(50) NOT NULL
);

CREATE SEQUENCE sqCategoria START WITH 1 INCREMENT BY 1;

CREATE TABLE PRODUCTO(
    ID_PRODUCTO VARCHAR(12) NOT NULL PRIMARY KEY,
    NOMBRE VARCHAR(50) NOT NULL,
    PRECIO_COMPRA NUMBER NOT NULL,
    PRECIO_VENTA NUMBER NOT NULL,
    IVA NUMBER NOT NULL,
    RUT_PROVEEDOR VARCHAR(11),
    ID_CATEGORIA NUMBER NOT NULL,
    FOREIGN KEY (RUT_PROVEEDOR) REFERENCES PROVEEDOR(RUT_PROVEEDOR),
    FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA)
);

CREATE TABLE ESTADO(
    ID_ESTADO NUMBER NOT NULL PRIMARY KEY,
    DENOMINACION VARCHAR(10)
);

CREATE TABLE SOLICITUD(
    ID_SOLICITUD NUMBER NOT NULL PRIMARY KEY,
    FECHA_PEDIDO TIMESTAMP NOT NULL,
    FECHA_ESPERADA TIMESTAMP NOT NULL,
    FECHA_ENTREGA TIMESTAMP,
    CALIFICACION NUMBER,
    ID_FERRETERIA NUMBER NOT NULL,
    ID_ESTADO NUMBER NOT NULL,
    RUT_PROVEEDOR VARCHAR(11),
    FOREIGN KEY (RUT_PROVEEDOR) REFERENCES PROVEEDOR(RUT_PROVEEDOR),
    FOREIGN KEY (ID_FERRETERIA) REFERENCES FERRETERIA(ID_FERRETERIA),
    FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO(ID_ESTADO)
);

CREATE SEQUENCE sqSolicitud START WITH 1 INCREMENT BY 1;

CREATE TABLE PRODUCTOS_SOLICITUD(
    ID_PRODUCTO VARCHAR(12) NOT NULL,
    ID_SOLICITUD NUMBER NOT NULL,
    CANTIDAD NUMBER,
    MONTO_TOTAL NUMBER, --CALCULAR
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    FOREIGN KEY (ID_SOLICITUD) REFERENCES SOLICITUD(ID_SOLICITUD),
    PRIMARY KEY (ID_PRODUCTO,ID_SOLICITUD)
);

CREATE TABLE INVENTARIO_FERRETERIA(
    ID_PRODUCTO VARCHAR(12) NOT NULL,
    ID_FERRETERIA NUMBER NOT NULL,
    CANTIDAD NUMBER,
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    FOREIGN KEY (ID_FERRETERIA) REFERENCES FERRETERIA(ID_FERRETERIA),
    PRIMARY KEY (ID_PRODUCTO,ID_FERRETERIA)
);

CREATE TABLE FORMA_PAGO(
    ID_FORMA_PAGO NUMBER NOT NULL PRIMARY KEY,
    DENOMINACION VARCHAR(50)
);

CREATE TABLE DETALLES_FACTURA(
    ID_FACTURA NUMBER NOT NULL PRIMARY KEY,
    DESCUENTO NUMBER,
    FECHA TIMESTAMP NOT NULL,
    ID_FERRETERIA NUMBER NOT NULL,
    RUT_CLIENTE VARCHAR(11) NOT NULL,
    RUT_EMPLEADO VARCHAR(11) NOT NULL,
    ID_FORMA_PAGO NUMBER NOT NULL,
    FOREIGN KEY (ID_FERRETERIA) REFERENCES FERRETERIA(ID_FERRETERIA),
    FOREIGN KEY (RUT_CLIENTE) REFERENCES CLIENTE(RUT_CLIENTE),
    FOREIGN KEY (RUT_EMPLEADO) REFERENCES EMPLEADO(RUT_EMPLEADO),
    FOREIGN KEY (ID_FORMA_PAGO) REFERENCES FORMA_PAGO(ID_FORMA_PAGO)
);

CREATE SEQUENCE sqFactura START WITH 1 INCREMENT BY 1;

CREATE TABLE ITEMS_FACTURA(
    ID_PRODUCTO VARCHAR(12) NOT NULL,
    ID_FACTURA NUMBER NOT NULL,
    CANTIDAD NUMBER NOT NULL,
    IVA NUMBER,
    PRECIO_VENTA NUMBER,
    MONTO_TOTAL NUMBER,
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    FOREIGN KEY (ID_FACTURA) REFERENCES DETALLES_FACTURA(ID_FACTURA),
    PRIMARY KEY (ID_PRODUCTO,ID_FACTURA)
);

CREATE OR REPLACE TRIGGER productos_solicitud_proveedor
BEFORE INSERT ON PRODUCTOS_SOLICITUD
FOR EACH ROW
DECLARE 
    proveedor_rut VARCHAR(11);
    producto_count NUMBER;
BEGIN
    
    
    SELECT RUT_PROVEEDOR INTO proveedor_rut
    FROM SOLICITUD
    WHERE ID_SOLICITUD = :NEW.ID_SOLICITUD;
    
    SELECT COUNT(*) INTO producto_count
    FROM PRODUCTO
    WHERE ID_PRODUCTO = :NEW.ID_PRODUCTO AND RUT_PROVEEDOR = proveedor_rut;
    
    IF producto_count = 0 THEN        
        RAISE_APPLICATION_ERROR(-20001, 'El producto no pertenece al proveedor asociado a la solicitud.');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER actualizar_inventario_i
AFTER INSERT ON PRODUCTOS_SOLICITUD
FOR EACH ROW
DECLARE
    estado_solicitud NUMBER;
    ferreteria_solicitud NUMBER;
    cantidad_producto NUMBER;
BEGIN
    SELECT ID_ESTADO INTO estado_solicitud FROM SOLICITUD WHERE SOLICITUD.ID_SOLICITUD = :NEW.ID_SOLICITUD;

    IF estado_solicitud = 2 THEN
        SELECT ID_FERRETERIA INTO ferreteria_solicitud FROM SOLICITUD WHERE ID_SOLICITUD = :NEW.ID_SOLICITUD;
        
        UPDATE INVENTARIO_FERRETERIA SET CANTIDAD = CANTIDAD + :NEW.CANTIDAD 
        WHERE INVENTARIO_FERRETERIA.ID_FERRETERIA = ferreteria_solicitud
        AND INVENTARIO_FERRETERIA.ID_PRODUCTO = :NEW.ID_PRODUCTO;

        INSERT INTO INVENTARIO_FERRETERIA (ID_PRODUCTO, ID_FERRETERIA, CANTIDAD)
        VALUES (:NEW.ID_PRODUCTO, ferreteria_solicitud, :NEW.CANTIDAD);
        
    END IF;
END;
/


CREATE OR REPLACE TRIGGER actualizar_inventario_u
AFTER UPDATE ON SOLICITUD
FOR EACH ROW
BEGIN
    IF :NEW.ID_ESTADO = 2 THEN
        UPDATE INVENTARIO_FERRETERIA i
        SET i.CANTIDAD = i.CANTIDAD + (
            SELECT ps.CANTIDAD
            FROM PRODUCTOS_SOLICITUD ps
            WHERE i.ID_PRODUCTO = ps.ID_PRODUCTO
            AND ps.ID_SOLICITUD = :NEW.ID_SOLICITUD
        )
        WHERE i.ID_FERRETERIA = :NEW.ID_FERRETERIA
        AND i.ID_PRODUCTO IN (
            SELECT ps.ID_PRODUCTO
            FROM PRODUCTOS_SOLICITUD ps
            WHERE ps.ID_SOLICITUD = :NEW.ID_SOLICITUD
        );
        
        INSERT INTO INVENTARIO_FERRETERIA (ID_PRODUCTO, ID_FERRETERIA, CANTIDAD)
        SELECT ps.ID_PRODUCTO, :NEW.ID_FERRETERIA, ps.CANTIDAD
        FROM PRODUCTOS_SOLICITUD ps
        LEFT JOIN INVENTARIO_FERRETERIA i ON ps.ID_PRODUCTO = i.ID_PRODUCTO
        WHERE ps.ID_SOLICITUD = :NEW.ID_SOLICITUD
        AND i.ID_PRODUCTO IS NULL;
    END IF;
END;
/

/


CREATE TRIGGER actualiza_inventario_factura
BEFORE INSERT ON ITEMS_FACTURA
FOR EACH ROW
DECLARE 
    ferreteria_compra NUMBER;
BEGIN

    SELECT ID_FERRETERIA INTO ferreteria_compra FROM DETALLES_FACTURA 
    WHERE DETALLES_FACTURA.ID_FACTURA = :NEW.ID_FACTURA;

    UPDATE INVENTARIO_FERRETERIA
    SET CANTIDAD = CANTIDAD - :NEW.CANTIDAD
    WHERE ID_PRODUCTO = :NEW.ID_PRODUCTO
    AND ID_FERRETERIA = ferreteria_compra AND CANTIDAD>=:NEW.CANTIDAD;

END;
/
